{"version":3,"file":"static/webpack/static/development/pages/podcasts.js.db601a051437c835ed0a.hot-update.js","sources":["webpack:///./pages/podcasts.tsx"],"sourcesContent":["import { useRouter } from 'next/router';\nimport Layout from '../components/layout';\nimport React, { useEffect, useState, useContext } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { SelectedPodcastQuery } from '../services/query';\nimport _ from 'lodash'\nimport { Box, Tile, Title , Content} from 'bloomer';\nimport {Podcast} from '../services/interface'\nimport PodcastContext from '../components/context/podcastContext';\n\n\n\n\nconst PodcastPage = () => {\n    const router = useRouter();\n    const PodcastSelectedContext = useContext(PodcastContext);\n    console.log(PodcastSelectedContext)\n    const { data, loading, error } = useQuery(SelectedPodcastQuery, { variables: { someTitle: router.query.title } })\n    const [podcast, setPodcast] = useState<Podcast | null>(null);\n\n\n    useEffect(() => {\n        debugger;\n        if (data && !_.isEqual(data.podcasts, podcast)) {\n            setPodcast(data)\n        }\n    }, [data]);\n\n\n    const handleLayout = () => {\n        return (\n            <section className=\"section\">\n            <div className=\"container\">\n                <Tile isAncestor>\n                    <Tile isParent isVertical is-4>\n                        <img style={{height: '100%', objectFit: \"cover\", width: '100%'}} src={cardUrlHandler(podcast.image.url)} alt={podcast.title}/>\n                    </Tile>\n                    <Tile isParent>\n                        <Box>\n                            <Title>{podcast.title}</Title>\n                            <audio>\n                                <source src={cardUrlHandler(podcast.audioFile.url)} type={podcast.audioFile.mime} />\n                            </audio>\n                            <Content>{podcast.description}</Content>\n                        </Box>\n                    </Tile>\n                </Tile>\n            </div>\n        </section>\n        )\n    }\n\n    return (\n        <Layout>\n           {podcast ? handleLayout(): null}\n        </Layout>\n    )\n}\n\n\nexport default PodcastPage\n\n\n\nconst cardUrlHandler = (url) => {\n    return `http://localhost:1337/${url}`\n   }"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;AAJA;AAIA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAOA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAEA;AACA;AAGA;AACA;AACA;;;;A","sourceRoot":""}