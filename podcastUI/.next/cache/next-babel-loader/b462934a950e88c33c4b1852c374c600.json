{"ast":null,"code":"var _jsxFileName = \"/Users/kod/Desktop/podcastframework/podcastUI/components/audioPlayer.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Howl } from 'howler';\nimport { Box } from 'bloomer';\n\nconst AudioPlayer = ({\n  url,\n  id,\n  mime\n}) => {\n  const {\n    0: volume,\n    1: setVolume\n  } = useState(0.5);\n  const {\n    0: playRate,\n    1: setPlayRate\n  } = useState(1);\n  const {\n    0: play,\n    1: setPlay\n  } = useState(false);\n  const audio = new Howl({\n    src: [cardUrlHandler(url)],\n    volume: volume,\n    html5: true,\n    rate: playRate,\n    onend: () => {\n      console.log(\"the end\");\n    },\n    onpause: () => {\n      audio.pause();\n    }\n  });\n  return (// <div >\n    //     <audio controls>\n    //         <source src={url} type={mime} id={id} />\n    //     </audio>\n    // </div>\n    __jsx(Box, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, __jsx(\"audio\", {\n      controls: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, __jsx(\"source\", {\n      src: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), \">\"))\n  );\n};\n\nexport default AudioPlayer;\n\nconst cardUrlHandler = url => {\n  return `http://localhost:1337/${url}`;\n};","map":{"version":3,"sources":["/Users/kod/Desktop/podcastframework/podcastUI/components/audioPlayer.tsx"],"names":["React","useState","Howl","Box","AudioPlayer","url","id","mime","volume","setVolume","playRate","setPlayRate","play","setPlay","audio","src","cardUrlHandler","html5","rate","onend","console","log","onpause","pause"],"mappings":";;AAAA,OAAOA,KAAP,IAA2CC,QAA3C,QAA2D,OAA3D;AAEA,SAASC,IAAT,QAA6B,QAA7B;AACA,SAASC,GAAT,QAAoB,SAApB;;AAIA,MAAMC,WAAyC,GAAG,CAAC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,EAAP;AAAWC,EAAAA;AAAX,CAAD,KAAuB;AAErE,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBR,QAAQ,CAAC,GAAD,CAApC;AACA,QAAM;AAAA,OAACS,QAAD;AAAA,OAAWC;AAAX,MAA0BV,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM;AAAA,OAACW,IAAD;AAAA,OAAOC;AAAP,MAAkBZ,QAAQ,CAAC,KAAD,CAAhC;AAEA,QAAMa,KAAK,GAAG,IAAIZ,IAAJ,CAAS;AACnBa,IAAAA,GAAG,EAAE,CAACC,cAAc,CAACX,GAAD,CAAf,CADc;AAEnBG,IAAAA,MAAM,EAAEA,MAFW;AAGnBS,IAAAA,KAAK,EAAE,IAHY;AAInBC,IAAAA,IAAI,EAAER,QAJa;AAKnBS,IAAAA,KAAK,EAAE,MAAM;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH,KAPkB;AAQnBC,IAAAA,OAAO,EAAC,MAAK;AACTR,MAAAA,KAAK,CAACS,KAAN;AACH;AAVkB,GAAT,CAAd;AAaA,SACI;AACA;AACA;AACA;AACA;AACA,UAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,QAAQ,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,GAAG,EAAC,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,MADJ;AANJ;AAkBH,CArCD;;AAwCA,eAAenB,WAAf;;AAIA,MAAMY,cAAc,GAAIX,GAAD,IAAS;AAC5B,SAAQ,yBAAwBA,GAAI,EAApC;AACH,CAFD","sourcesContent":["import React, { FunctionComponent, useRef, useState } from 'react';\nimport { AudioFile } from '../services/interface'\nimport { Howl, Howler } from 'howler';\nimport { Box } from 'bloomer';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlayCircle, faPauseCircle } from '@fortawesome/free-solid-svg-icons'\n\nconst AudioPlayer: FunctionComponent<AudioFile> = ({ url, id, mime }) => {\n\n    const [volume, setVolume] = useState(0.5);\n    const [playRate, setPlayRate] = useState(1);\n    const [play, setPlay] = useState(false);\n\n    const audio = new Howl({\n        src: [cardUrlHandler(url)],\n        volume: volume,\n        html5: true,\n        rate: playRate,\n        onend: () => {\n            console.log(\"the end\")\n        },\n        onpause:()=> {\n            audio.pause();\n        }\n    })\n\n    return (\n        // <div >\n        //     <audio controls>\n        //         <source src={url} type={mime} id={id} />\n        //     </audio>\n        // </div>\n        <Box>\n            <audio controls>\n                <source src=\"\"/>>\n            </audio>\n            {/* <FontAwesomeIcon icon={!play ? faPlayCircle: faPauseCircle} onClick={() => {\n                \n                audio.playing() ? audio.pause() : audio.play();\n                setPlay(!play);\n                console.log(audio.duration())\n            }} /> */}\n        </Box>\n    )\n}\n\n\nexport default AudioPlayer;\n\n\n\nconst cardUrlHandler = (url) => {\n    return `http://localhost:1337/${url}`\n}"]},"metadata":{},"sourceType":"module"}