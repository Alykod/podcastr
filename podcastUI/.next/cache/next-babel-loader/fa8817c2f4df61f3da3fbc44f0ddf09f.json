{"ast":null,"code":"var _jsxFileName = \"/Users/kod/Desktop/podcastframework/podcastUI/pages/index.js\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nimport Header from \"../components/header\";\nimport Layout from \"../components/layout\";\nimport React, { useContext, useEffect } from \"react\";\nimport PodcastContext from '../components/context/podcastContext';\nimport { UPDATE_CURRENT_PODCAST } from '..//components/context/reducers';\nimport { withApollo } from '../lib/apollo'; // import PodcastsList from '../components/apolloLayout';\n\nimport { useQuery } from '@apollo/react-hooks';\nimport { PodcastsQuery } from '../services/query';\n\nconst Index = () => {\n  const podcastContext = useContext(PodcastContext);\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(PodcastsQuery);\n  console.log(data);\n  const {\n    newDAta\n  } = useQuery(LatestPodcastQuery, {});\n  useEffect(() => {\n    debugger;\n\n    if (podcastContext.podcastState.currentPodcast == \"\") {\n      podcastContext.updateCurrentPodcast('test'); // podcastContext.dispatch({type: UPDATE_CURRENT_PODCAST, value: 'test'})\n    }\n  }, []); // console.log(useContext(PodcastContext));\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Hello Next.js\"));\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/kod/Desktop/podcastframework/podcastUI/pages/index.js"],"names":["Link","Header","Layout","React","useContext","useEffect","PodcastContext","UPDATE_CURRENT_PODCAST","withApollo","useQuery","PodcastsQuery","Index","podcastContext","data","loading","error","console","log","newDAta","LatestPodcastQuery","podcastState","currentPodcast","updateCurrentPodcast"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,SAAQC,sBAAR,QAAqC,iCAArC;AACA,SAASC,UAAT,QAA2B,eAA3B,C,CACA;;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAAQC,aAAR,QAA4B,mBAA5B;;AAGA,MAAMC,KAAK,GAAG,MAAM;AAChB,QAAMC,cAAc,GAAGR,UAAU,CAACE,cAAD,CAAjC;AACA,QAAM;AAAEO,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BN,QAAQ,CAACC,aAAD,CAAzC;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AAEA,QAAM;AAAEK,IAAAA;AAAF,MAAcT,QAAQ,CAACU,kBAAD,EAAqB,EAArB,CAA5B;AAEAd,EAAAA,SAAS,CAAC,MAAK;AACX;;AACA,QAAGO,cAAc,CAACQ,YAAf,CAA4BC,cAA5B,IAA8C,EAAjD,EAAqD;AACjDT,MAAAA,cAAc,CAACU,oBAAf,CAAoC,MAApC,EADiD,CAEjD;AACH;AACJ,GANQ,EAMN,EANM,CAAT,CAPgB,CAchB;;AACF,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,CADF;AAMD,CArBD;;AAuBA,eAAeX,KAAf","sourcesContent":["import Link from \"next/link\";\nimport Header from \"../components/header\";\nimport Layout from \"../components/layout\";\nimport React, { useContext, useEffect } from \"react\";\nimport PodcastContext from '../components/context/podcastContext';\nimport {UPDATE_CURRENT_PODCAST} from '..//components/context/reducers'\nimport { withApollo } from '../lib/apollo'\n// import PodcastsList from '../components/apolloLayout';\nimport { useQuery } from '@apollo/react-hooks';\nimport {PodcastsQuery} from '../services/query';\n\n\nconst Index = () => {\n    const podcastContext = useContext(PodcastContext)\n    const { data, loading, error } = useQuery(PodcastsQuery);\n    console.log(data);\n\n    const { newDAta } = useQuery(LatestPodcastQuery, {})\n\n    useEffect(()=> {\n        debugger;\n        if(podcastContext.podcastState.currentPodcast == \"\") {\n            podcastContext.updateCurrentPodcast('test')\n            // podcastContext.dispatch({type: UPDATE_CURRENT_PODCAST, value: 'test'})\n        }\n    }, [])\n    // console.log(useContext(PodcastContext));\n  return (\n    <Layout>\n    {/* <PodcastsList /> */}\n      <p>Hello Next.js</p>\n    </Layout>\n  );\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}