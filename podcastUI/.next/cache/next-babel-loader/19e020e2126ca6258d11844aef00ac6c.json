{"ast":null,"code":"var __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport Layout from '../components/layout';\nimport React, { useEffect, useState } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { SinglePodcast } from '../services/query';\nimport _ from 'lodash';\nimport PodcastTemplate from '../components/podcastTemplate';\n\nvar PodcastPage = function PodcastPage() {\n  var router = useRouter();\n\n  var _useQuery = useQuery(SinglePodcast, {\n    variables: {\n      filter: router.query.title\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  var _useState = useState(null),\n      podcast = _useState[0],\n      setPodcast = _useState[1];\n\n  useEffect(function () {\n    if (data && !_.isEqual(data.podcast, podcast)) {\n      setPodcast(data.podcasts[0]);\n    }\n  }, [data]);\n  useEffect(function () {\n    if (error) {\n      window.location.href = window.location.origin;\n    }\n  }, [error]); // const handleLayout = (podcast) => {\n  //     return (\n  //         <section className=\"section\">\n  //         <div className=\"container\">\n  //             <Tile isAncestor>\n  //                 <Tile isParent isVertical className=\"is-4\">\n  //                     <img style={{height: '100%', objectFit: \"cover\", width: '100%'}} src={cardUrlHandler(podcast.image.url)} alt={podcast.title}/>\n  //                 </Tile>\n  //                 <Tile isParent>\n  //                     <Box>\n  //                         <Title>{podcast.title}</Title>\n  //                         {/* <audio controls>\n  //                             <source src={cardUrlHandler(podcast.audioFile.url)} type={podcast.audioFile.mime} id={podcast.audioFile.id}/>\n  //                         </audio> */}\n  //                         <AudioPlayer {...podcast.audioFile} />\n  //                         <Content>{podcast.description}</Content>\n  //                     </Box>\n  //                 </Tile>\n  //             </Tile>\n  //         </div>\n  //     </section>\n  //     )\n  // }\n\n  return __jsx(Layout, null, podcast ? __jsx(PodcastTemplate, {\n    podcast: podcast\n  }) : null);\n};\n\nexport default PodcastPage;","map":null,"metadata":{},"sourceType":"module"}