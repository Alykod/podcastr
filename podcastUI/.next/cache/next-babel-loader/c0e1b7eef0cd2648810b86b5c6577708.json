{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/kod/Desktop/podcastframework/podcastUI/pages/podcasts.tsx\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport Layout from '../components/layout';\nimport React, { useEffect, useState } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { SinglePodcast } from '../services/query';\nimport _ from 'lodash';\nimport { Box, Tile, Title, Content } from 'bloomer';\nimport AudioPlayer from '../components/audioPlayer';\n\nvar PodcastPage = function PodcastPage() {\n  var router = useRouter();\n\n  var _useQuery = useQuery(SinglePodcast, {\n    variables: {\n      filter: router.query.title\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  var _useState = useState(null),\n      podcast = _useState[0],\n      setPodcast = _useState[1];\n\n  useEffect(function () {\n    if (data && !_.isEqual(data.podcast, podcast)) {\n      setPodcast(data.podcasts[0]);\n    }\n  }, [data]);\n  useEffect(function () {\n    if (error) {\n      window.location.href = window.location.origin;\n    }\n  }, [error]);\n\n  var handleLayout = function handleLayout(podcast) {\n    return __jsx(\"section\", {\n      className: \"section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, __jsx(Tile, {\n      isAncestor: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, __jsx(Tile, {\n      isParent: true,\n      isVertical: true,\n      className: \"is-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      style: {\n        height: '100%',\n        objectFit: \"cover\",\n        width: '100%'\n      },\n      src: cardUrlHandler(podcast.image.url),\n      alt: podcast.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })), __jsx(Tile, {\n      isParent: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, __jsx(Box, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, __jsx(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, podcast.title), __jsx(AudioPlayer, _extends({}, podcast.audioFile, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    })), __jsx(Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, podcast.description))))));\n  };\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, podcast ? handleLayout(podcast) : null);\n};\n\nexport default PodcastPage;\n\nvar cardUrlHandler = function cardUrlHandler(url) {\n  return \"http://localhost:1337/\".concat(url);\n};","map":{"version":3,"sources":["/Users/kod/Desktop/podcastframework/podcastUI/pages/podcasts.tsx"],"names":["useRouter","Layout","React","useEffect","useState","useQuery","SinglePodcast","_","Box","Tile","Title","Content","AudioPlayer","PodcastPage","router","variables","filter","query","title","data","loading","error","podcast","setPodcast","isEqual","podcasts","window","location","href","origin","handleLayout","height","objectFit","width","cardUrlHandler","image","url","audioFile","description"],"mappings":"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","sourcesContent":["import { useRouter } from 'next/router';\nimport Layout from '../components/layout';\nimport React, { useEffect, useState, useContext } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { SelectedPodcastQuery,SinglePodcast } from '../services/query';\nimport _ from 'lodash'\nimport { Box, Tile, Title , Content} from 'bloomer';\nimport {Podcast} from '../services/interface'\nimport PodcastContext from '../components/context/podcastContext';\nimport AudioPlayer from '../components/audioPlayer';\nimport PodcastTemplate from '../components/podcastTemplate';\n\n\n\nconst PodcastPage = () => {\n    const router = useRouter();\n    const { data, loading, error } = useQuery(SinglePodcast, { variables: { filter: router.query.title } })\n\n    const [podcast, setPodcast] = useState<Podcast | null>(null);\n\n\n    useEffect(() => {\n        if (data && !_.isEqual(data.podcast, podcast)) {\n            setPodcast(data.podcasts[0])\n        }\n    }, [data]);\n\n\n    useEffect(()=> {\n        if(error) {\n            window.location.href =  window.location.origin;\n        }\n    }, [error]);\n\n\n    const handleLayout = (podcast) => {\n        return (\n            <section className=\"section\">\n            <div className=\"container\">\n                <Tile isAncestor>\n                    <Tile isParent isVertical className=\"is-4\">\n                        <img style={{height: '100%', objectFit: \"cover\", width: '100%'}} src={cardUrlHandler(podcast.image.url)} alt={podcast.title}/>\n                    </Tile>\n                    <Tile isParent>\n                        <Box>\n                            <Title>{podcast.title}</Title>\n                            {/* <audio controls>\n                                <source src={cardUrlHandler(podcast.audioFile.url)} type={podcast.audioFile.mime} id={podcast.audioFile.id}/>\n                            </audio> */}\n                            <AudioPlayer {...podcast.audioFile} />\n                            <Content>{podcast.description}</Content>\n                        </Box>\n                    </Tile>\n                </Tile>\n            </div>\n        </section>\n        )\n    }\n\n    return (\n        <Layout>\n           {podcast ? handleLayout(podcast): null}\n        </Layout>\n    )\n}\n\n\nexport default PodcastPage\n\n\n\nconst cardUrlHandler = (url) => {\n    return `http://localhost:1337/${url}`\n   }"]},"metadata":{},"sourceType":"module"}