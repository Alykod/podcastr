{"ast":null,"code":"var _jsxFileName = \"/Users/kod/Desktop/podcastframework/podcastUI/components/audioPlayer.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Howl } from 'howler';\nimport { Box } from 'bloomer';\n\nvar AudioPlayer = function AudioPlayer(_ref) {\n  var url = _ref.url,\n      id = _ref.id,\n      mime = _ref.mime;\n\n  var _useState = useState(0.5),\n      volume = _useState[0],\n      setVolume = _useState[1];\n\n  var _useState2 = useState(1),\n      playRate = _useState2[0],\n      setPlayRate = _useState2[1];\n\n  var _useState3 = useState(false),\n      play = _useState3[0],\n      setPlay = _useState3[1];\n\n  var audio = new Howl({\n    src: [cardUrlHandler(url)],\n    volume: volume,\n    html5: true,\n    rate: playRate,\n    onend: function onend() {\n      console.log(\"the end\");\n    },\n    onpause: function onpause() {\n      audio.pause();\n    }\n  });\n  return (// <div >\n    //     <audio controls>\n    //         <source src={url} type={mime} id={id} />\n    //     </audio>\n    // </div>\n    __jsx(Box, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, __jsx(\"audio\", {\n      controls: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }))\n  );\n};\n\nexport default AudioPlayer;\n\nvar cardUrlHandler = function cardUrlHandler(url) {\n  return \"http://localhost:1337/\".concat(url);\n};","map":{"version":3,"sources":["/Users/kod/Desktop/podcastframework/podcastUI/components/audioPlayer.tsx"],"names":["React","useState","Howl","Box","AudioPlayer","url","id","mime","volume","setVolume","playRate","setPlayRate","play","setPlay","audio","src","cardUrlHandler","html5","rate","onend","console","log","onpause","pause"],"mappings":";;AAAA,OAAOA,KAAP,IAA2CC,QAA3C,QAA2D,OAA3D;AAEA,SAASC,IAAT,QAA6B,QAA7B;AACA,SAASC,GAAT,QAAoB,SAApB;;AAIA,IAAMC,WAAyC,GAAG,SAA5CA,WAA4C,OAAuB;AAAA,MAApBC,GAAoB,QAApBA,GAAoB;AAAA,MAAfC,EAAe,QAAfA,EAAe;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAAA,kBAEzCN,QAAQ,CAAC,GAAD,CAFiC;AAAA,MAE9DO,MAF8D;AAAA,MAEtDC,SAFsD;;AAAA,mBAGrCR,QAAQ,CAAC,CAAD,CAH6B;AAAA,MAG9DS,QAH8D;AAAA,MAGpDC,WAHoD;;AAAA,mBAI7CV,QAAQ,CAAC,KAAD,CAJqC;AAAA,MAI9DW,IAJ8D;AAAA,MAIxDC,OAJwD;;AAMrE,MAAMC,KAAK,GAAG,IAAIZ,IAAJ,CAAS;AACnBa,IAAAA,GAAG,EAAE,CAACC,cAAc,CAACX,GAAD,CAAf,CADc;AAEnBG,IAAAA,MAAM,EAAEA,MAFW;AAGnBS,IAAAA,KAAK,EAAE,IAHY;AAInBC,IAAAA,IAAI,EAAER,QAJa;AAKnBS,IAAAA,KAAK,EAAE,iBAAM;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH,KAPkB;AAQnBC,IAAAA,OAAO,EAAC,mBAAK;AACTR,MAAAA,KAAK,CAACS,KAAN;AACH;AAVkB,GAAT,CAAd;AAaA,SACI;AACA;AACA;AACA;AACA;AACA,UAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,QAAQ,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AANJ;AAkBH,CArCD;;AAwCA,eAAenB,WAAf;;AAIA,IAAMY,cAAc,GAAG,SAAjBA,cAAiB,CAACX,GAAD,EAAS;AAC5B,yCAAgCA,GAAhC;AACH,CAFD","sourcesContent":["import React, { FunctionComponent, useRef, useState } from 'react';\nimport { AudioFile } from '../services/interface'\nimport { Howl, Howler } from 'howler';\nimport { Box } from 'bloomer';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlayCircle, faPauseCircle } from '@fortawesome/free-solid-svg-icons'\n\nconst AudioPlayer: FunctionComponent<AudioFile> = ({ url, id, mime }) => {\n\n    const [volume, setVolume] = useState(0.5);\n    const [playRate, setPlayRate] = useState(1);\n    const [play, setPlay] = useState(false);\n\n    const audio = new Howl({\n        src: [cardUrlHandler(url)],\n        volume: volume,\n        html5: true,\n        rate: playRate,\n        onend: () => {\n            console.log(\"the end\")\n        },\n        onpause:()=> {\n            audio.pause();\n        }\n    })\n\n    return (\n        // <div >\n        //     <audio controls>\n        //         <source src={url} type={mime} id={id} />\n        //     </audio>\n        // </div>\n        <Box>\n            <audio controls>\n\n            </audio>\n            {/* <FontAwesomeIcon icon={!play ? faPlayCircle: faPauseCircle} onClick={() => {\n                \n                audio.playing() ? audio.pause() : audio.play();\n                setPlay(!play);\n                console.log(audio.duration())\n            }} /> */}\n        </Box>\n    )\n}\n\n\nexport default AudioPlayer;\n\n\n\nconst cardUrlHandler = (url) => {\n    return `http://localhost:1337/${url}`\n}"]},"metadata":{},"sourceType":"module"}