{"ast":null,"code":"var _jsxFileName = \"/Users/kod/Desktop/podcastframework/podcastUI/components/context/globalState.js\";\nvar __jsx = React.createElement;\nimport React, { useReducer } from \"react\";\nimport { podcastReducer, UPDATE_CURRENT_PODCAST, UPDATE_PODCASTS_LIST } from \"./reducers\";\nimport PodcastContext from \"./podcastContext\";\n\nconst GlobalState = props => {\n  const initialState = {\n    theme: 'light',\n    podcastList: [],\n    currentPodcast: {}\n  };\n  const {\n    0: podcastState,\n    1: dispatch\n  } = useReducer(podcastReducer, initialState);\n\n  const updateCurrentPodcast = podcast => {\n    dispatch({\n      type: UPDATE_CURRENT_PODCAST,\n      value: podcast\n    });\n  };\n\n  const updatePodcastList = podcasts => {\n    dispatch({\n      type: UPDATE_PODCASTS_LIST,\n      value: podcasts\n    });\n  };\n\n  return __jsx(PodcastContext.Provider, {\n    value: {\n      podcastState,\n      updatePodcastList,\n      updateCurrentPodcast\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default GlobalState;","map":{"version":3,"sources":["/Users/kod/Desktop/podcastframework/podcastUI/components/context/globalState.js"],"names":["React","useReducer","podcastReducer","UPDATE_CURRENT_PODCAST","UPDATE_PODCASTS_LIST","PodcastContext","GlobalState","props","initialState","theme","podcastList","currentPodcast","podcastState","dispatch","updateCurrentPodcast","podcast","type","value","updatePodcastList","podcasts","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SACEC,cADF,EAEEC,sBAFF,EAGEC,oBAHF,QAIO,YAJP;AAKA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAC3B,QAAMC,YAAY,GAAG;AACjBC,IAAAA,KAAK,EAAE,OADU;AAEjBC,IAAAA,WAAW,EAAE,EAFI;AAGjBC,IAAAA,cAAc,EAAE;AAHC,GAArB;AAKA,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAA2BZ,UAAU,CAACC,cAAD,EAAiBM,YAAjB,CAA3C;;AAEA,QAAMM,oBAAoB,GAAIC,OAAD,IAAa;AACtCF,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAEb,sBAAP;AAA+Bc,MAAAA,KAAK,EAAEF;AAAtC,KAAD,CAAR;AACH,GAFD;;AAIA,QAAMG,iBAAiB,GAAIC,QAAD,IAAc;AACpCN,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAEZ,oBAAP;AAA6Ba,MAAAA,KAAK,EAAEE;AAApC,KAAD,CAAR;AACH,GAFD;;AAKA,SAAO,MAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAACP,MAAAA,YAAD;AAAeM,MAAAA,iBAAf;AAAkCJ,MAAAA;AAAlC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0FP,KAAK,CAACa,QAAhG,CAAP;AACD,CAlBD;;AAqBA,eAAed,WAAf","sourcesContent":["import React, { useReducer } from \"react\";\nimport {\n  podcastReducer,\n  UPDATE_CURRENT_PODCAST,\n  UPDATE_PODCASTS_LIST\n} from \"./reducers\";\nimport PodcastContext from \"./podcastContext\";\n\nconst GlobalState = props => {\n  const initialState = {\n      theme: 'light',\n      podcastList: [],\n      currentPodcast: {},\n  }\n  const [podcastState, dispatch] = useReducer(podcastReducer, initialState);\n\n  const updateCurrentPodcast = (podcast) => {\n      dispatch({type: UPDATE_CURRENT_PODCAST, value: podcast})\n  };\n\n  const updatePodcastList = (podcasts) => {\n      dispatch({type: UPDATE_PODCASTS_LIST, value: podcasts})\n  }\n  \n\n  return <PodcastContext.Provider value={{podcastState, updatePodcastList, updateCurrentPodcast}}>{props.children}</PodcastContext.Provider>;\n};\n\n\nexport default GlobalState;"]},"metadata":{},"sourceType":"module"}