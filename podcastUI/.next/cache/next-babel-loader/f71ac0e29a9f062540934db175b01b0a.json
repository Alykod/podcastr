{"ast":null,"code":"import { useState, useEffect } from 'react';\n\nfunction useAudioPlayer() {\n  const {\n    0: duration,\n    1: setDuration\n  } = useState();\n  const {\n    0: currentTime,\n    1: setCurrentTime\n  } = useState();\n  const {\n    0: playing,\n    1: setPlaying\n  } = useState(false);\n  const {\n    0: clickedTime,\n    1: setClickedTime\n  } = useState();\n  useEffect(() => {\n    const audio = document.getElementById(\"audio\");\n\n    const setAudioMeta = () => {\n      debugger;\n      setDuration(audio.duration);\n      setCurrentTime(audio.currentTime);\n    };\n\n    const setAudioTime = () => setCurrentTime(audio.currentTime);\n\n    audio.addEventListener(\"loadeddata\", setAudioMeta);\n    audio.addEventListener(\"timeupdate\", setAudioTime);\n    playing ? audio.play() : audio.pause();\n\n    if (clickedTime && clickedTime !== currentTime) {\n      debugger;\n      audio.currentTime = clickedTime;\n      setCurrentTime(clickedTime);\n    }\n\n    return () => {\n      audio.removeEventListener(\"loadeddata\", setAudioMeta);\n      audio.removeEventListener(\"timeupdate\", setAudioTime);\n    };\n  });\n  return {\n    currentTime,\n    duration,\n    playing,\n    setPlaying,\n    setClickedTime\n  };\n}\n\nexport default useAudioPlayer;","map":{"version":3,"sources":["/Users/kod/Desktop/podcastframework/podcastUI/components/audio/useAudioPlayer.ts"],"names":["useState","useEffect","useAudioPlayer","duration","setDuration","currentTime","setCurrentTime","playing","setPlaying","clickedTime","setClickedTime","audio","document","getElementById","setAudioMeta","setAudioTime","addEventListener","play","pause","removeEventListener"],"mappings":"AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;;AAGA,SAASC,cAAT,GAA0B;AACtB,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BJ,QAAQ,EAAxC;AACA,QAAM;AAAA,OAACK,WAAD;AAAA,OAAcC;AAAd,MAAgCN,QAAQ,EAA9C;AACA,QAAM;AAAA,OAACO,OAAD;AAAA,OAAUC;AAAV,MAAwBR,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAACS,WAAD;AAAA,OAAcC;AAAd,MAAgCV,QAAQ,EAA9C;AAIAC,EAAAA,SAAS,CAAC,MAAK;AAEX,UAAMU,KAAK,GAAqBC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAhC;;AAEA,UAAMC,YAAY,GAAG,MAAM;AACvB;AACAV,MAAAA,WAAW,CAACO,KAAK,CAACR,QAAP,CAAX;AACAG,MAAAA,cAAc,CAACK,KAAK,CAACN,WAAP,CAAd;AACH,KAJD;;AAKA,UAAMU,YAAY,GAAG,MAAMT,cAAc,CAACK,KAAK,CAACN,WAAP,CAAzC;;AAGAM,IAAAA,KAAK,CAACK,gBAAN,CAAuB,YAAvB,EAAqCF,YAArC;AACAH,IAAAA,KAAK,CAACK,gBAAN,CAAuB,YAAvB,EAAqCD,YAArC;AAGAR,IAAAA,OAAO,GAAGI,KAAK,CAACM,IAAN,EAAH,GAAkBN,KAAK,CAACO,KAAN,EAAzB;;AAEA,QAAGT,WAAW,IAAIA,WAAW,KAAKJ,WAAlC,EAA+C;AAC3C;AACAM,MAAAA,KAAK,CAACN,WAAN,GAAoBI,WAApB;AACAH,MAAAA,cAAc,CAACG,WAAD,CAAd;AAEH;;AAED,WAAO,MAAM;AACTE,MAAAA,KAAK,CAACQ,mBAAN,CAA0B,YAA1B,EAAwCL,YAAxC;AACAH,MAAAA,KAAK,CAACQ,mBAAN,CAA0B,YAA1B,EAAwCJ,YAAxC;AAEH,KAJD;AAKH,GA9BQ,CAAT;AAgCA,SAAO;AACHV,IAAAA,WADG;AAEHF,IAAAA,QAFG;AAGHI,IAAAA,OAHG;AAIHC,IAAAA,UAJG;AAKHE,IAAAA;AALG,GAAP;AAQH;;AAED,eAAeR,cAAf","sourcesContent":["import {useState, useEffect} from 'react';\n\n\nfunction useAudioPlayer() {\n    const [duration, setDuration] = useState();\n    const [currentTime, setCurrentTime] = useState();\n    const [playing, setPlaying] = useState(false);\n    const [clickedTime, setClickedTime] = useState();\n\n\n\n    useEffect(()=> {\n\n        const audio = <HTMLAudioElement>document.getElementById(\"audio\");\n\n        const setAudioMeta = () => {\n            debugger;\n            setDuration(audio.duration);\n            setCurrentTime(audio.currentTime)\n        }\n        const setAudioTime = () => setCurrentTime(audio.currentTime);\n\n\n        audio.addEventListener(\"loadeddata\", setAudioMeta);\n        audio.addEventListener(\"timeupdate\", setAudioTime);\n\n\n        playing ? audio.play() : audio.pause();\n\n        if(clickedTime && clickedTime !== currentTime) {\n            debugger;\n            audio.currentTime = clickedTime;\n            setCurrentTime(clickedTime);\n\n        }\n\n        return () => {\n            audio.removeEventListener(\"loadeddata\", setAudioMeta);\n            audio.removeEventListener(\"timeupdate\", setAudioTime);\n\n        }\n    })\n\n    return {\n        currentTime, \n        duration,\n        playing, \n        setPlaying, \n        setClickedTime\n    }\n\n}\n\nexport default useAudioPlayer;\n"]},"metadata":{},"sourceType":"module"}