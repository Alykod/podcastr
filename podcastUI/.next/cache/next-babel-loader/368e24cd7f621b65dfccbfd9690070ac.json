{"ast":null,"code":"var _jsxFileName = \"/Users/kod/Desktop/podcastframework/podcastUI/pages/index.js\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nimport Header from \"../components/header\";\nimport Layout from \"../components/layout\";\nimport React, { useContext } from \"react\";\nimport PodcastContext from '../components/context/podcastContext';\nimport { UPDATE_CURRENT_PODCAST } from '..//components/context/';\n\nvar Index = function Index() {\n  var podcastContext = useContext(PodcastContext);\n  var dispatcher = podcastContext.podcastDispatch(\"\");\n  console.log(podcastContext);\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Hello Next.js\"));\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/kod/Desktop/podcastframework/podcastUI/pages/index.js"],"names":["Link","Header","Layout","React","useContext","PodcastContext","UPDATE_CURRENT_PODCAST","Index","podcastContext","dispatcher","podcastDispatch","console","log"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,SAAQC,sBAAR,QAAqC,yBAArC;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAChB,MAAMC,cAAc,GAAGJ,UAAU,CAACC,cAAD,CAAjC;AACA,MAAMI,UAAU,GAAGD,cAAc,CAACE,eAAf,CAA+B,EAA/B,CAAnB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,cAAZ;AACF,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CADF;AAKD,CATD;;AAWA,eAAeD,KAAf","sourcesContent":["import Link from \"next/link\";\nimport Header from \"../components/header\";\nimport Layout from \"../components/layout\";\nimport React, { useContext } from \"react\";\nimport PodcastContext from '../components/context/podcastContext';\nimport {UPDATE_CURRENT_PODCAST} from '..//components/context/'\n\nconst Index = () => {\n    const podcastContext = useContext(PodcastContext)\n    const dispatcher = podcastContext.podcastDispatch(\"\")\n    console.log(podcastContext);\n  return (\n    <Layout>\n      <p>Hello Next.js</p>\n    </Layout>\n  );\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}