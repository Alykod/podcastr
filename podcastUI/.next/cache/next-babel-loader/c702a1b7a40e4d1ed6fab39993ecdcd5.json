{"ast":null,"code":"var _jsxFileName = \"/Users/kod/Desktop/podcastframework/podcastUI/components/context/globalState.js\";\nvar __jsx = React.createElement;\nimport React, { useReducer } from \"react\";\nimport { podcastReducer, UPDATE_CURRENT_PODCAST, UPDATE_PODCASTS_LIST } from \"./reducers\";\nimport PodcastContext from \"./podcastContext\";\n\nvar GlobalState = function GlobalState(props) {\n  var initialState = {\n    theme: 'light',\n    podcastList: [],\n    currentPodcast: {},\n    currentPodcastId: \"\"\n  };\n\n  var _useReducer = useReducer(podcastReducer, initialState),\n      podcastState = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  var updateCurrentPodcast = function updateCurrentPodcast(podcast) {\n    dispatch({\n      type: UPDATE_CURRENT_PODCAST,\n      value: podcast\n    });\n  };\n\n  var updatePodcastList = function updatePodcastList(podcasts) {\n    dispatch({\n      type: UPDATE_PODCASTS_LIST,\n      value: podcasts\n    });\n  };\n\n  return __jsx(PodcastContext.Provider, {\n    value: {\n      podcastState: podcastState,\n      updatePodcastList: updatePodcastList,\n      updateCurrentPodcast: updateCurrentPodcast\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default GlobalState;","map":{"version":3,"sources":["/Users/kod/Desktop/podcastframework/podcastUI/components/context/globalState.js"],"names":["React","useReducer","podcastReducer","UPDATE_CURRENT_PODCAST","UPDATE_PODCASTS_LIST","PodcastContext","GlobalState","props","initialState","theme","podcastList","currentPodcast","currentPodcastId","podcastState","dispatch","updateCurrentPodcast","podcast","type","value","updatePodcastList","podcasts","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SACEC,cADF,EAEEC,sBAFF,EAGEC,oBAHF,QAIO,YAJP;AAKA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,KAAK,EAAI;AAC3B,MAAMC,YAAY,GAAG;AACjBC,IAAAA,KAAK,EAAE,OADU;AAEjBC,IAAAA,WAAW,EAAE,EAFI;AAGjBC,IAAAA,cAAc,EAAE,EAHC;AAIjBC,IAAAA,gBAAgB,EAAE;AAJD,GAArB;;AAD2B,oBAQMX,UAAU,CAACC,cAAD,EAAiBM,YAAjB,CARhB;AAAA,MAQpBK,YARoB;AAAA,MAQNC,QARM;;AAU3B,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,OAAD,EAAa;AACtCF,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAEd,sBAAP;AAA+Be,MAAAA,KAAK,EAAEF;AAAtC,KAAD,CAAR;AACH,GAFD;;AAIA,MAAMG,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,QAAD,EAAc;AACpCN,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAEb,oBAAP;AAA6Bc,MAAAA,KAAK,EAAEE;AAApC,KAAD,CAAR;AACH,GAFD;;AAKA,SAAO,MAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAACP,MAAAA,YAAY,EAAZA,YAAD;AAAeM,MAAAA,iBAAiB,EAAjBA,iBAAf;AAAkCJ,MAAAA,oBAAoB,EAApBA;AAAlC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0FR,KAAK,CAACc,QAAhG,CAAP;AACD,CApBD;;AAuBA,eAAef,WAAf","sourcesContent":["import React, { useReducer } from \"react\";\nimport {\n  podcastReducer,\n  UPDATE_CURRENT_PODCAST,\n  UPDATE_PODCASTS_LIST\n} from \"./reducers\";\nimport PodcastContext from \"./podcastContext\";\n\nconst GlobalState = props => {\n  const initialState = {\n      theme: 'light',\n      podcastList: [],\n      currentPodcast: {},\n      currentPodcastId: \"\",\n  }\n  \n  const [podcastState, dispatch] = useReducer(podcastReducer, initialState);\n\n  const updateCurrentPodcast = (podcast) => {\n      dispatch({type: UPDATE_CURRENT_PODCAST, value: podcast})\n  };\n\n  const updatePodcastList = (podcasts) => {\n      dispatch({type: UPDATE_PODCASTS_LIST, value: podcasts})\n  }\n  \n\n  return <PodcastContext.Provider value={{podcastState, updatePodcastList, updateCurrentPodcast}}>{props.children}</PodcastContext.Provider>;\n};\n\n\nexport default GlobalState;"]},"metadata":{},"sourceType":"module"}