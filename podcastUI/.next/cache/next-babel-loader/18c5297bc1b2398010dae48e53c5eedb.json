{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/kod/Desktop/podcastframework/podcastUI/pages/index.tsx\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/layout\";\nimport React, { useEffect, useState } from \"react\";\n// import apollo, { withApollo } from '../lib/apollo'\n// import PodcastsList from '../components/apolloLayout';\nimport { useQuery } from '@apollo/react-hooks';\nimport PodcastCard from '../components/podcastCard';\nimport { PodcastsQuery } from '../services/query';\nimport _ from 'lodash';\n\nvar Index = function Index() {\n  var _useQuery = useQuery(PodcastsQuery),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  var _useState = useState(loading),\n      loadingStatus = _useState[0],\n      setLoadingStatus = _useState[1];\n\n  var _useState2 = useState(null),\n      podcastData = _useState2[0],\n      setPodcastData = _useState2[1];\n\n  useEffect(function () {\n    if (data && !_.isEqual(data.podcasts, podcastData)) {\n      setPodcastData(data);\n    }\n  }, [data]);\n  useEffect(function () {\n    setLoadingStatus(loading);\n  }, [loading]);\n\n  var handleCardsMapping = function handleCardsMapping() {\n    return podcastData && podcastData.podcasts.map(function (podcast) {\n      return __jsx(PodcastCard, _extends({\n        key: podcast.id\n      }, podcast, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }));\n    });\n  };\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'space-between',\n      alignContent: 'space-between'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, handleCardsMapping()), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Hello Next.js\"));\n}; //reason get initial props is not used in this situation, is due to the fact that it would not work with hooks. When react suspense is out, this might be updated. \n\n\nexport default Index;","map":{"version":3,"sources":["/Users/kod/Desktop/podcastframework/podcastUI/pages/index.tsx"],"names":["Layout","React","useEffect","useState","useQuery","PodcastCard","PodcastsQuery","_","Index","data","loading","error","loadingStatus","setLoadingStatus","podcastData","setPodcastData","isEqual","podcasts","handleCardsMapping","map","podcast","id","display","flexDirection","justifyContent","alignContent"],"mappings":";;;AAEA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,IAA4BC,SAA5B,EAAuCC,QAAvC,QAAsD,OAAtD;AAGA;AACA;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAAQC,aAAR,QAAgD,mBAAhD;AACA,OAAOC,CAAP,MAAc,QAAd;;AAGA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA,kBACiBJ,QAAQ,CAACE,aAAD,CADzB;AAAA,MACRG,IADQ,aACRA,IADQ;AAAA,MACFC,OADE,aACFA,OADE;AAAA,MACOC,KADP,aACOA,KADP;;AAAA,kBAE0BR,QAAQ,CAACO,OAAD,CAFlC;AAAA,MAETE,aAFS;AAAA,MAEMC,gBAFN;;AAAA,mBAGsBV,QAAQ,CAAC,IAAD,CAH9B;AAAA,MAGTW,WAHS;AAAA,MAGIC,cAHJ;;AAKhBb,EAAAA,SAAS,CAAC,YAAK;AACX,QAAGO,IAAI,IAAI,CAACF,CAAC,CAACS,OAAF,CAAUP,IAAI,CAACQ,QAAf,EAAyBH,WAAzB,CAAZ,EAAmD;AAC/CC,MAAAA,cAAc,CAACN,IAAD,CAAd;AACH;AACJ,GAJQ,EAIN,CAACA,IAAD,CAJM,CAAT;AAMAP,EAAAA,SAAS,CAAC,YAAK;AACXW,IAAAA,gBAAgB,CAACH,OAAD,CAAhB;AACH,GAFQ,EAEN,CAACA,OAAD,CAFM,CAAT;;AAKA,MAAMQ,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAChC,WAAQJ,WAAW,IAAIA,WAAW,CAACG,QAAZ,CAAqBE,GAArB,CAAyB,UAACC,OAAD,EAAY;AAC1D,aAAO,MAAC,WAAD;AAAa,QAAA,GAAG,EAAEA,OAAO,CAACC;AAA1B,SAAkCD,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACA,KAFqB,CAAvB;AAGA,GAJD;;AAMF,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAE;AAACE,MAAAA,OAAO,EAAE,MAAV;AAAkBC,MAAAA,aAAa,EAAE,QAAjC;AAA2CC,MAAAA,cAAc,EAAE,eAA3D;AAA4EC,MAAAA,YAAY,EAAE;AAA1F,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCP,kBAAkB,EADnB,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBALF,CADF;AASD,CA/BD,C,CAiCA;;;AAGA,eAAeV,KAAf","sourcesContent":["import Link from \"next/link\";\nimport Header from \"../components/header\";\nimport Layout from \"../components/layout\";\nimport React, { useContext, useEffect, useState} from \"react\";\nimport PodcastContext from '../components/context/podcastContext';\nimport {UPDATE_CURRENT_PODCAST} from '..//components/context/reducers'\n// import apollo, { withApollo } from '../lib/apollo'\n// import PodcastsList from '../components/apolloLayout';\nimport { useQuery } from '@apollo/react-hooks';\nimport PodcastCard from '../components/podcastCard'\nimport {PodcastsQuery, LatestPodcastQuery} from '../services/query';\nimport _ from 'lodash'\n\n\nconst Index = () => {\n    const { data, loading, error } = useQuery(PodcastsQuery);\n    const [loadingStatus, setLoadingStatus] = useState(loading);\n    const [podcastData, setPodcastData] = useState(null);\n\n    useEffect(()=> {\n        if(data && !_.isEqual(data.podcasts, podcastData)) {\n            setPodcastData(data)\n        }\n    }, [data]);\n\n    useEffect(()=> {\n        setLoadingStatus(loading);\n    }, [loading])\n    \n\n    const handleCardsMapping = () => {\n     return  podcastData && podcastData.podcasts.map((podcast)=> {\n       return <PodcastCard key={podcast.id} {...podcast} />\n      })\n    }\n\n  return (\n    <Layout>\n      <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'space-between', alignContent: 'space-between'}}>\n      {handleCardsMapping()}\n\n      </div>\n      <p>Hello Next.js</p>\n    </Layout>\n  );\n};\n\n//reason get initial props is not used in this situation, is due to the fact that it would not work with hooks. When react suspense is out, this might be updated. \n\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}