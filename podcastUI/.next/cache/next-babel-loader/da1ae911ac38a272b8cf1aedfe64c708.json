{"ast":null,"code":"var _jsxFileName = \"/Users/kod/Desktop/podcastframework/podcastUI/components/audio/audioBar.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\n\nfunction Bar(props) {\n  var duration = props.duration,\n      currentTime = props.currentTime,\n      onTimeUpdate = props.onTimeUpdate;\n\n  var calculateTime = function calculateTime(e) {\n    var clickedPositionOnPage = e.pageX;\n    var bar = document.getElementById(\"progress\");\n    var barStart = bar.getBoundingClientRect().left + window.scrollX;\n    var barWidth = bar.offsetWidth;\n    var clickPositionInBar = clickedPositionOnPage - barStart;\n    var timePerPixel = duration / barWidth;\n    return timePerPixel * clickPositionInBar;\n  };\n\n  var handleTimeDrag = function handleTimeDrag(e) {\n    onTimeUpdate(calculateTime(e));\n  };\n\n  var updateTimeOnMove = function updateTimeOnMove(event) {\n    onTimeUpdate(calculateTime(event));\n  };\n\n  return __jsx(\"div\", {\n    className: \"bar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, currentTime), __jsx(\"progress\", {\n    id: \"progress\",\n    className: \"progress is-primary\",\n    value: currentTime,\n    max: duration,\n    onMouseDown: function onMouseDown(e) {\n      return handleTimeDrag(e);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, duration));\n}\n\nexport default Bar;","map":{"version":3,"sources":["/Users/kod/Desktop/podcastframework/podcastUI/components/audio/audioBar.tsx"],"names":["React","Bar","props","duration","currentTime","onTimeUpdate","calculateTime","e","clickedPositionOnPage","pageX","bar","document","getElementById","barStart","getBoundingClientRect","left","window","scrollX","barWidth","offsetWidth","clickPositionInBar","timePerPixel","handleTimeDrag","updateTimeOnMove","event"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAAA,MACRC,QADQ,GACgCD,KADhC,CACRC,QADQ;AAAA,MACEC,WADF,GACgCF,KADhC,CACEE,WADF;AAAA,MACeC,YADf,GACgCH,KADhC,CACeG,YADf;;AAIhB,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,CAAD,EAAO;AACzB,QAAMC,qBAAqB,GAAGD,CAAC,CAACE,KAAhC;AACA,QAAMC,GAAG,GAAGC,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAAZ;AACA,QAAMC,QAAQ,GAAGH,GAAG,CAACI,qBAAJ,GAA4BC,IAA5B,GAAmCC,MAAM,CAACC,OAA3D;AACA,QAAMC,QAAQ,GAAGR,GAAG,CAACS,WAArB;AACA,QAAMC,kBAAkB,GAAGZ,qBAAqB,GAAGK,QAAnD;AACA,QAAMQ,YAAY,GAAGlB,QAAQ,GAAGe,QAAhC;AACA,WAAOG,YAAY,GAAGD,kBAAtB;AACH,GARD;;AAUA,MAAME,cAAc,GAAG,SAAjBA,cAAiB,CAACf,CAAD,EAAO;AAC1BF,IAAAA,YAAY,CAACC,aAAa,CAACC,CAAD,CAAd,CAAZ;AACH,GAFD;;AAIA,MAAMgB,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,KAAK,EAAI;AAC9BnB,IAAAA,YAAY,CAACC,aAAa,CAACkB,KAAD,CAAd,CAAZ;AACD,GAFH;;AAIA,SACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOpB,WAAP,CADJ,EAEI;AAAU,IAAA,EAAE,EAAC,UAAb;AAAwB,IAAA,SAAS,EAAC,qBAAlC;AAAwD,IAAA,KAAK,EAAEA,WAA/D;AAA4E,IAAA,GAAG,EAAED,QAAjF;AAA2F,IAAA,WAAW,EAAE,qBAAAI,CAAC;AAAA,aAAIe,cAAc,CAACf,CAAD,CAAlB;AAAA,KAAzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOJ,QAAP,CARJ,CADJ;AAYH;;AAGD,eAAeF,GAAf","sourcesContent":["import React from 'react';\n\nfunction Bar(props) {\n    const { duration, currentTime, onTimeUpdate } = props;\n\n\n    const calculateTime = (e) => {\n        const clickedPositionOnPage = e.pageX;\n        const bar = document.getElementById(\"progress\");\n        const barStart = bar.getBoundingClientRect().left + window.scrollX;\n        const barWidth = bar.offsetWidth;\n        const clickPositionInBar = clickedPositionOnPage - barStart;\n        const timePerPixel = duration / barWidth;\n        return timePerPixel * clickPositionInBar;\n    }\n\n    const handleTimeDrag = (e) => {\n        onTimeUpdate(calculateTime(e));\n    }\n\n    const updateTimeOnMove = event => {\n        onTimeUpdate(calculateTime(event));\n      };\n\n    return (\n        <div className=\"bar\">\n            <span>{currentTime}</span>\n            <progress id=\"progress\" className=\"progress is-primary\" value={currentTime} max={duration} onMouseDown={e => handleTimeDrag(e)}>\n\n                {/* <span>\n                \n            </span> */}\n            </progress>\n            <span>{duration}</span>\n        </div>\n    )\n}\n\n\nexport default Bar;"]},"metadata":{},"sourceType":"module"}