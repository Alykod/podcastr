{"ast":null,"code":"var _jsxFileName = \"/Users/kod/Desktop/podcastframework/podcastUI/pages/podcasts.tsx\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport Layout from '../components/layout';\nimport React, { useEffect, useState, useContext } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { SelectedPodcastQuery } from '../services/query';\nimport _ from 'lodash';\nimport { Box, Tile, Title, Content } from 'bloomer';\nimport PodcastContext from '../components/context/podcastContext';\n\nconst PodcastPage = () => {\n  const router = useRouter();\n  const {\n    podcastState,\n    updatePodcastList,\n    updateCurrentPodcast\n  } = useContext(PodcastContext); // console.log(PodcastSelectedContext)\n\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(SelectedPodcastQuery, {\n    variables: {\n      someId: podcastState.currentPodcast.id\n    }\n  });\n  const {\n    0: podcast,\n    1: setPodcast\n  } = useState(null);\n  useEffect(() => {\n    if (data && !_.isEqual(data.podcast, podcast)) {\n      setPodcast(data.podcast);\n    }\n  }, [data]);\n  useEffect(() => {\n    if (error) {\n      console.log(window.location);\n      window.location.href = window.location.origin;\n    }\n\n    console.log(error);\n  }, [error]);\n\n  const handleLayout = () => {\n    return __jsx(\"section\", {\n      className: \"section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, __jsx(Tile, {\n      isAncestor: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, __jsx(Tile, {\n      isParent: true,\n      isVertical: true,\n      className: \"is-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      style: {\n        height: '100%',\n        objectFit: \"cover\",\n        width: '100%'\n      },\n      src: cardUrlHandler(podcast.image.url),\n      alt: podcast.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })), __jsx(Tile, {\n      isParent: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, __jsx(Box, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, __jsx(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, podcast.title), __jsx(\"audio\", {\n      controls: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, __jsx(\"source\", {\n      src: cardUrlHandler(podcast.audioFile.url),\n      type: podcast.audioFile.mime,\n      id: podcast.audioFile.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })), __jsx(Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, podcast.description))))));\n  };\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, podcast ? handleLayout() : null);\n};\n\nexport default PodcastPage;\n\nconst cardUrlHandler = url => {\n  return `http://localhost:1337/${url}`;\n};","map":{"version":3,"sources":["/Users/kod/Desktop/podcastframework/podcastUI/pages/podcasts.tsx"],"names":["useRouter","Layout","React","useEffect","useState","useContext","useQuery","SelectedPodcastQuery","_","Box","Tile","Title","Content","PodcastContext","PodcastPage","router","podcastState","updatePodcastList","updateCurrentPodcast","data","loading","error","variables","someId","currentPodcast","id","podcast","setPodcast","isEqual","console","log","window","location","href","origin","handleLayout","height","objectFit","width","cardUrlHandler","image","url","title","audioFile","mime","description"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,oBAAT,QAAqC,mBAArC;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,KAApB,EAA4BC,OAA5B,QAA0C,SAA1C;AAEA,OAAOC,cAAP,MAA2B,sCAA3B;;AAKA,MAAMC,WAAW,GAAG,MAAM;AACtB,QAAMC,MAAM,GAAGf,SAAS,EAAxB;AACA,QAAM;AAACgB,IAAAA,YAAD;AAAeC,IAAAA,iBAAf;AAAkCC,IAAAA;AAAlC,MAA0Db,UAAU,CAACQ,cAAD,CAA1E,CAFsB,CAGtB;;AACA,QAAM;AAAEM,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2Bf,QAAQ,CAACC,oBAAD,EAAuB;AAAEe,IAAAA,SAAS,EAAE;AAAEC,MAAAA,MAAM,EAAEP,YAAY,CAACQ,cAAb,CAA4BC;AAAtC;AAAb,GAAvB,CAAzC;AACA,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBvB,QAAQ,CAAiB,IAAjB,CAAtC;AAGAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIgB,IAAI,IAAI,CAACX,CAAC,CAACoB,OAAF,CAAUT,IAAI,CAACO,OAAf,EAAwBA,OAAxB,CAAb,EAA+C;AAC3CC,MAAAA,UAAU,CAACR,IAAI,CAACO,OAAN,CAAV;AACH;AACJ,GAJQ,EAIN,CAACP,IAAD,CAJM,CAAT;AAOAhB,EAAAA,SAAS,CAAC,MAAK;AACX,QAAGkB,KAAH,EAAU;AACNQ,MAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,QAAnB;AACAD,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAwBF,MAAM,CAACC,QAAP,CAAgBE,MAAxC;AACH;;AACDL,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AACH,GANQ,EAMN,CAACA,KAAD,CANM,CAAT;;AAQA,QAAMc,YAAY,GAAG,MAAM;AACvB,WACI;AAAS,MAAA,SAAS,EAAC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD;AAAM,MAAA,UAAU,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD;AAAM,MAAA,QAAQ,MAAd;AAAe,MAAA,UAAU,MAAzB;AAA0B,MAAA,SAAS,EAAC,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAE,MAAT;AAAiBC,QAAAA,SAAS,EAAE,OAA5B;AAAqCC,QAAAA,KAAK,EAAE;AAA5C,OAAZ;AAAiE,MAAA,GAAG,EAAEC,cAAc,CAACb,OAAO,CAACc,KAAR,CAAcC,GAAf,CAApF;AAAyG,MAAA,GAAG,EAAEf,OAAO,CAACgB,KAAtH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAII,MAAC,IAAD;AAAM,MAAA,QAAQ,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQhB,OAAO,CAACgB,KAAhB,CADJ,EAEI;AAAO,MAAA,QAAQ,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,GAAG,EAAEH,cAAc,CAACb,OAAO,CAACiB,SAAR,CAAkBF,GAAnB,CAA3B;AAAoD,MAAA,IAAI,EAAEf,OAAO,CAACiB,SAAR,CAAkBC,IAA5E;AAAkF,MAAA,EAAE,EAAElB,OAAO,CAACiB,SAAR,CAAkBlB,EAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFJ,EAKI,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAUC,OAAO,CAACmB,WAAlB,CALJ,CADJ,CAJJ,CADJ,CADA,CADJ;AAoBH,GArBD;;AAuBA,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACInB,OAAO,GAAGS,YAAY,EAAf,GAAmB,IAD9B,CADJ;AAKH,CAnDD;;AAsDA,eAAerB,WAAf;;AAIA,MAAMyB,cAAc,GAAIE,GAAD,IAAS;AAC5B,SAAQ,yBAAwBA,GAAI,EAApC;AACA,CAFJ","sourcesContent":["import { useRouter } from 'next/router';\nimport Layout from '../components/layout';\nimport React, { useEffect, useState, useContext } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { SelectedPodcastQuery } from '../services/query';\nimport _ from 'lodash'\nimport { Box, Tile, Title , Content} from 'bloomer';\nimport {Podcast} from '../services/interface'\nimport PodcastContext from '../components/context/podcastContext';\n\n\n\n\nconst PodcastPage = () => {\n    const router = useRouter();\n    const {podcastState, updatePodcastList, updateCurrentPodcast} = useContext(PodcastContext);\n    // console.log(PodcastSelectedContext)\n    const { data, loading, error } = useQuery(SelectedPodcastQuery, { variables: { someId: podcastState.currentPodcast.id } })\n    const [podcast, setPodcast] = useState<Podcast | null>(null);\n\n\n    useEffect(() => {\n        if (data && !_.isEqual(data.podcast, podcast)) {\n            setPodcast(data.podcast)\n        }\n    }, [data]);\n\n\n    useEffect(()=> {\n        if(error) {\n            console.log(window.location)\n            window.location.href =  window.location.origin;\n        }\n        console.log(error)\n    }, [error])\n\n    const handleLayout = () => {\n        return (\n            <section className=\"section\">\n            <div className=\"container\">\n                <Tile isAncestor>\n                    <Tile isParent isVertical className=\"is-4\">\n                        <img style={{height: '100%', objectFit: \"cover\", width: '100%'}} src={cardUrlHandler(podcast.image.url)} alt={podcast.title}/>\n                    </Tile>\n                    <Tile isParent>\n                        <Box>\n                            <Title>{podcast.title}</Title>\n                            <audio controls>\n                                <source src={cardUrlHandler(podcast.audioFile.url)} type={podcast.audioFile.mime} id={podcast.audioFile.id}/>\n                            </audio>\n                            <Content>{podcast.description}</Content>\n                        </Box>\n                    </Tile>\n                </Tile>\n            </div>\n        </section>\n        )\n    }\n\n    return (\n        <Layout>\n           {podcast ? handleLayout(): null}\n        </Layout>\n    )\n}\n\n\nexport default PodcastPage\n\n\n\nconst cardUrlHandler = (url) => {\n    return `http://localhost:1337/${url}`\n   }"]},"metadata":{},"sourceType":"module"}