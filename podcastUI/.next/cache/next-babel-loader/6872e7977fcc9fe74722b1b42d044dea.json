{"ast":null,"code":"var _jsxFileName = \"/Users/kod/Desktop/podcastframework/podcastUI/components/audio/audioPlayer.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Box } from 'bloomer';\nimport useAudioPlayer from './useAudioPlayer';\nimport Bar from './audioBar';\nimport { Play, Pause } from './PlayPause';\nimport './audio.scss';\n\nconst AudioPlayer = ({\n  url,\n  id,\n  mime\n}) => {\n  const {\n    currentTime,\n    duration,\n    playing,\n    setPlaying,\n    setClickedTime\n  } = useAudioPlayer(); // const [volume, setVolume] = useState(0.5);\n  // const [playRate, setPlayRate] = useState(1);\n  // const [play, setPlay] = useState(false);\n\n  return (// <div >\n    //     <audio controls>\n    //         <source src={url} type={mime} id={id} />\n    //     </audio>\n    // </div>\n    __jsx(Box, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, __jsx(\"audio\", {\n      id: \"audio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, __jsx(\"source\", {\n      src: cardUrlHandler(url),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"controls\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, playing ? __jsx(Pause, {\n      handlePress: () => setPlaying(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }) : __jsx(Play, {\n      handleClick: () => setPlaying(true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), __jsx(Bar, {\n      duration: duration,\n      currentTime: currentTime,\n      onTimeUpdate: setClickedTime,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    })))\n  );\n};\n\nexport default AudioPlayer;\n\nconst cardUrlHandler = url => {\n  return `http://localhost:1337/${url}`;\n};","map":{"version":3,"sources":["/Users/kod/Desktop/podcastframework/podcastUI/components/audio/audioPlayer.tsx"],"names":["React","Box","useAudioPlayer","Bar","Play","Pause","AudioPlayer","url","id","mime","currentTime","duration","playing","setPlaying","setClickedTime","cardUrlHandler"],"mappings":";;AAAA,OAAOA,KAAP,MAA2D,OAA3D;AAGA,SAASC,GAAT,QAAoB,SAApB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,SAAQC,IAAR,EAAcC,KAAd,QAA0B,aAA1B;AACA,OAAO,cAAP;;AAIA,MAAMC,WAAyC,GAAG,CAAC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,EAAP;AAAWC,EAAAA;AAAX,CAAD,KAAuB;AAErE,QAAM;AAACC,IAAAA,WAAD;AAAcC,IAAAA,QAAd;AAAwBC,IAAAA,OAAxB;AAAiCC,IAAAA,UAAjC;AAA6CC,IAAAA;AAA7C,MAA+DZ,cAAc,EAAnF,CAFqE,CAIrE;AACA;AACA;;AAGA,SACI;AACA;AACA;AACA;AACA;AACA,UAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,EAAE,EAAC,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,GAAG,EAAEa,cAAc,CAACR,GAAD,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAIE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIK,OAAO,GAAG,MAAC,KAAD;AAAO,MAAA,WAAW,EAAE,MAAKC,UAAU,CAAC,KAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,GAAoD,MAAC,IAAD;AAAM,MAAA,WAAW,EAAE,MAAKA,UAAU,CAAC,IAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD/D,EAEC,MAAC,GAAD;AAAK,MAAA,QAAQ,EAAEF,QAAf;AAAyB,MAAA,WAAW,EAAED,WAAtC;AAAmD,MAAA,YAAY,EAAEI,cAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,CAJF;AANJ;AAgBH,CAzBD;;AA4BA,eAAeR,WAAf;;AAIA,MAAMS,cAAc,GAAIR,GAAD,IAAS;AAC5B,SAAQ,yBAAwBA,GAAI,EAApC;AACH,CAFD","sourcesContent":["import React, { FunctionComponent, useRef, useState } from 'react';\nimport { AudioFile } from '../../services/interface'\nimport { Howl, Howler } from 'howler';\nimport { Box } from 'bloomer';\nimport useAudioPlayer from './useAudioPlayer';\nimport Bar from './audioBar';\nimport {Play, Pause} from './PlayPause';\nimport './audio.scss'\n\n\n\nconst AudioPlayer: FunctionComponent<AudioFile> = ({ url, id, mime }) => {\n\n    const {currentTime, duration, playing, setPlaying, setClickedTime} = useAudioPlayer();\n\n    // const [volume, setVolume] = useState(0.5);\n    // const [playRate, setPlayRate] = useState(1);\n    // const [play, setPlay] = useState(false);\n\n\n    return (\n        // <div >\n        //     <audio controls>\n        //         <source src={url} type={mime} id={id} />\n        //     </audio>\n        // </div>\n        <Box>\n            <audio id=\"audio\">\n                <source src={cardUrlHandler(url)}/>\n            </audio>\n          <div className=\"controls\"> \n             {playing ? <Pause handlePress={()=> setPlaying(false)} /> : <Play handleClick={()=> setPlaying(true)}/> }\n           <Bar duration={duration} currentTime={currentTime} onTimeUpdate={setClickedTime}/>\n          </div>\n        </Box>\n    )\n}\n\n\nexport default AudioPlayer;\n\n\n\nconst cardUrlHandler = (url) => {\n    return `http://localhost:1337/${url}`\n}"]},"metadata":{},"sourceType":"module"}