{"ast":null,"code":"var _jsxFileName = \"/Users/kod/Desktop/podcastframework/podcastUI/components/context/globalState.js\";\nvar __jsx = React.createElement;\nimport React, { useReducer } from \"react\";\nimport { podcastReducer, UPDATE_CURRENT_PODCAST, UPDATE_PODCASTS_LIST } from \"./reducers\";\nimport PodcastContext from \"./podcastContext\";\n\nvar GlobalState = function GlobalState(props) {\n  //   const [theme, setTheme] = useState(\"light\");\n  //   const [podcastList, setPodcastList] = useState({});\n  //   const [currentPodcast, setCurrentPodcast] = useState({});\n  var theme = \"light\";\n  var podcastList = [];\n  var currentPodcast = {}; // state = {\n  //     theme: 'light',\n  //     podcastList: [],\n  //     currentPodcast: {}\n  // }\n\n  var _useReducer = useReducer(podcastReducer),\n      podcastState = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  var updateCurrentPodcast = function updateCurrentPodcast(podcast) {\n    dispatch({\n      type: UPDATE_CURRENT_PODCAST,\n      podcast: podcast\n    });\n  };\n\n  var updatePodcastList = function updatePodcastList(podcasts) {\n    dispatch({\n      type: UPDATE_PODCASTS_LIST,\n      podcasts: podcasts\n    });\n  };\n\n  return __jsx(PodcastContext.Provider, {\n    value: {\n      updateCurrentPodcast: updateCurrentPodcast,\n      updatePodcastList: updatePodcastList,\n      podcastState: podcastState\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default GlobalState;","map":{"version":3,"sources":["/Users/kod/Desktop/podcastframework/podcastUI/components/context/globalState.js"],"names":["React","useReducer","podcastReducer","UPDATE_CURRENT_PODCAST","UPDATE_PODCASTS_LIST","PodcastContext","GlobalState","props","theme","podcastList","currentPodcast","podcastState","dispatch","updateCurrentPodcast","podcast","type","updatePodcastList","podcasts","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SACEC,cADF,EAEEC,sBAFF,EAGEC,oBAHF,QAIO,YAJP;AAKA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,KAAK,EAAI;AAC7B;AACA;AACA;AACE,MAAMC,KAAK,GAAG,OAAd;AACA,MAAMC,WAAW,GAAG,EAApB;AACA,MAAMC,cAAc,GAAE,EAAtB,CAN2B,CAO3B;AACA;AACA;AACA;AACA;;AAX2B,oBAaMT,UAAU,CAACC,cAAD,CAbhB;AAAA,MAapBS,YAboB;AAAA,MAaNC,QAbM;;AAe3B,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,OAAD,EAAa;AACtCF,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAEZ,sBAAP;AAA+BW,MAAAA,OAAO,EAAPA;AAA/B,KAAD,CAAR;AACH,GAFD;;AAIA,MAAME,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,QAAD,EAAc;AACpCL,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAEX,oBAAP;AAA6Ba,MAAAA,QAAQ,EAARA;AAA7B,KAAD,CAAR;AACH,GAFD;;AAIA,SAAO,MAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAACJ,MAAAA,oBAAoB,EAApBA,oBAAD;AAAuBG,MAAAA,iBAAiB,EAAjBA,iBAAvB;AAA0CL,MAAAA,YAAY,EAAZA;AAA1C,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0FJ,KAAK,CAACW,QAAhG,CAAP;AACD,CAxBD;;AA2BA,eAAeZ,WAAf","sourcesContent":["import React, { useReducer } from \"react\";\nimport {\n  podcastReducer,\n  UPDATE_CURRENT_PODCAST,\n  UPDATE_PODCASTS_LIST\n} from \"./reducers\";\nimport PodcastContext from \"./podcastContext\";\n\nconst GlobalState = props => {\n//   const [theme, setTheme] = useState(\"light\");\n//   const [podcastList, setPodcastList] = useState({});\n//   const [currentPodcast, setCurrentPodcast] = useState({});\n  const theme = \"light\";\n  const podcastList = [];\n  const currentPodcast= {};\n  // state = {\n  //     theme: 'light',\n  //     podcastList: [],\n  //     currentPodcast: {}\n  // }\n\n  const [podcastState, dispatch] = useReducer(podcastReducer);\n\n  const updateCurrentPodcast = (podcast) => {\n      dispatch({type: UPDATE_CURRENT_PODCAST, podcast})\n  };\n\n  const updatePodcastList = (podcasts) => {\n      dispatch({type: UPDATE_PODCASTS_LIST, podcasts})\n  }\n\n  return <PodcastContext.Provider value={{updateCurrentPodcast, updatePodcastList, podcastState}}>{props.children}</PodcastContext.Provider>;\n};\n\n\nexport default GlobalState;"]},"metadata":{},"sourceType":"module"}