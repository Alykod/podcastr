{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/kod/Desktop/podcastframework/podcastUI/pages/_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport App from \"next/app\";\nimport GlobalState from \"../components/context/globalState\";\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport withData from '../lib/apollo';\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  return __jsx(ApolloProvider, {\n    client: apollo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, __jsx(GlobalState, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, __jsx(Component, _extends({}, pageProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }))));\n} // Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n//\n// MyApp.getInitialProps = async (appContext) => {\n//   // calls page's `getInitialProps` and fills `appProps.pageProps`\n//   const appProps = await App.getInitialProps(appContext);\n//\n//   return { ...appProps }\n// }\n\n\nexport default withData(MyApp);","map":{"version":3,"sources":["/Users/kod/Desktop/podcastframework/podcastUI/pages/_app.js"],"names":["App","GlobalState","ApolloProvider","withData","MyApp","Component","pageProps","apollo"],"mappings":";;;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAOC,WAAP,MAAwB,mCAAxB;AACA,SAASC,cAAT,QAA+B,qBAA/B;AAGA,OAAOC,QAAP,MAAqB,eAArB;;AAGA,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAf,EAA2C;AACzC,SACE,MAAC,cAAD;AAAgB,IAAA,MAAM,EAAEC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD,eAAeD,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADA,CADF;AAOD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeH,QAAQ,CAACC,KAAD,CAAvB","sourcesContent":["import App from \"next/app\";\nimport GlobalState from \"../components/context/globalState\";\nimport { ApolloProvider } from '@apollo/react-hooks';\n\n\nimport withData from '../lib/apollo';\n\n\nfunction MyApp({ Component, pageProps,  }) {\n  return (\n    <ApolloProvider client={apollo}>\n    <GlobalState>\n      <Component {...pageProps} />\n    </GlobalState>\n    </ApolloProvider>\n  );\n}\n\n// Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n//\n// MyApp.getInitialProps = async (appContext) => {\n//   // calls page's `getInitialProps` and fills `appProps.pageProps`\n//   const appProps = await App.getInitialProps(appContext);\n//\n//   return { ...appProps }\n// }\n\nexport default withData(MyApp);\n"]},"metadata":{},"sourceType":"module"}