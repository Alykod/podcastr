{"ast":null,"code":"var _jsxFileName = \"/Users/kod/Desktop/podcastframework/podcastUI/components/audioPlayer.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Howl } from 'howler';\nimport { Box } from 'bloomer';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlayCircle, faPauseCircle } from '@fortawesome/free-solid-svg-icons';\n\nconst AudioPlayer = ({\n  url,\n  id,\n  mime\n}) => {\n  const {\n    0: volume,\n    1: setVolume\n  } = useState(0.5);\n  const {\n    0: playRate,\n    1: setPlayRate\n  } = useState(1);\n  const {\n    0: play,\n    1: setPlay\n  } = useState(false);\n  const audio = new Howl({\n    src: [cardUrlHandler(url)],\n    volume: volume,\n    rate: playRate,\n    onend: () => {\n      console.log(\"the end\");\n    }\n  });\n  return (// <div >\n    //     <audio controls>\n    //         <source src={url} type={mime} id={id} />\n    //     </audio>\n    // </div>\n    __jsx(Box, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, __jsx(FontAwesomeIcon, {\n      icon: play ? faPlayCircle : faPauseCircle,\n      onClick: () => {\n        !play ? audio.play() : audio.pause();\n        setPlay(!play);\n        console.log(audio.duration());\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }))\n  );\n};\n\nexport default AudioPlayer;\n\nconst cardUrlHandler = url => {\n  return `http://localhost:1337/${url}`;\n};","map":{"version":3,"sources":["/Users/kod/Desktop/podcastframework/podcastUI/components/audioPlayer.tsx"],"names":["React","useState","Howl","Box","FontAwesomeIcon","faPlayCircle","faPauseCircle","AudioPlayer","url","id","mime","volume","setVolume","playRate","setPlayRate","play","setPlay","audio","src","cardUrlHandler","rate","onend","console","log","pause","duration"],"mappings":";;AAAA,OAAOA,KAAP,IAA2CC,QAA3C,QAA2D,OAA3D;AAEA,SAASC,IAAT,QAA6B,QAA7B;AACA,SAASC,GAAT,QAAoB,SAApB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,mCAA5C;;AAEA,MAAMC,WAAyC,GAAG,CAAC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,EAAP;AAAWC,EAAAA;AAAX,CAAD,KAAuB;AAErE,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBX,QAAQ,CAAC,GAAD,CAApC;AACA,QAAM;AAAA,OAACY,QAAD;AAAA,OAAWC;AAAX,MAA0Bb,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM;AAAA,OAACc,IAAD;AAAA,OAAOC;AAAP,MAAkBf,QAAQ,CAAC,KAAD,CAAhC;AAEA,QAAMgB,KAAK,GAAG,IAAIf,IAAJ,CAAS;AACnBgB,IAAAA,GAAG,EAAE,CAACC,cAAc,CAACX,GAAD,CAAf,CADc;AAEnBG,IAAAA,MAAM,EAAEA,MAFW;AAGnBS,IAAAA,IAAI,EAAEP,QAHa;AAInBQ,IAAAA,KAAK,EAAE,MAAM;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH;AANkB,GAAT,CAAd;AASA,SACI;AACA;AACA;AACA;AACA;AACA,UAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,eAAD;AAAiB,MAAA,IAAI,EAAER,IAAI,GAAGV,YAAH,GAAiBC,aAA5C;AAA2D,MAAA,OAAO,EAAE,MAAM;AAEtE,SAACS,IAAD,GAAQE,KAAK,CAACF,IAAN,EAAR,GAAuBE,KAAK,CAACO,KAAN,EAAvB;AACAR,QAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACAO,QAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACQ,QAAN,EAAZ;AACH,OALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AANJ;AAeH,CA9BD;;AAiCA,eAAelB,WAAf;;AAIA,MAAMY,cAAc,GAAIX,GAAD,IAAS;AAC5B,SAAQ,yBAAwBA,GAAI,EAApC;AACH,CAFD","sourcesContent":["import React, { FunctionComponent, useRef, useState } from 'react';\nimport { AudioFile } from '../services/interface'\nimport { Howl, Howler } from 'howler';\nimport { Box } from 'bloomer';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlayCircle, faPauseCircle } from '@fortawesome/free-solid-svg-icons'\n\nconst AudioPlayer: FunctionComponent<AudioFile> = ({ url, id, mime }) => {\n\n    const [volume, setVolume] = useState(0.5);\n    const [playRate, setPlayRate] = useState(1);\n    const [play, setPlay] = useState(false);\n\n    const audio = new Howl({\n        src: [cardUrlHandler(url)],\n        volume: volume,\n        rate: playRate,\n        onend: () => {\n            console.log(\"the end\")\n        },\n    })\n\n    return (\n        // <div >\n        //     <audio controls>\n        //         <source src={url} type={mime} id={id} />\n        //     </audio>\n        // </div>\n        <Box>\n            <FontAwesomeIcon icon={play ? faPlayCircle: faPauseCircle} onClick={() => {\n                \n                !play ? audio.play() : audio.pause();\n                setPlay(!play);\n                console.log(audio.duration())\n            }} />\n        </Box>\n    )\n}\n\n\nexport default AudioPlayer;\n\n\n\nconst cardUrlHandler = (url) => {\n    return `http://localhost:1337/${url}`\n}"]},"metadata":{},"sourceType":"module"}