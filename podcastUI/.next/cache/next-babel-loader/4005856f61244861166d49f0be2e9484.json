{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/layout\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport PodcastContext from '../components/context/podcastContext';\n// import apollo, { withApollo } from '../lib/apollo'\n// import PodcastsList from '../components/apolloLayout';\nimport { useQuery } from '@apollo/react-hooks';\nimport PodcastCard from '../components/podcastCard';\nimport { PodcastsQuery } from '../services/query';\nimport _ from 'lodash';\n\nvar Index = function Index() {\n  var podcastContext = useContext(PodcastContext);\n\n  var _useQuery = useQuery(PodcastsQuery),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  var _useState = useState(loading),\n      loadingStatus = _useState[0],\n      setLoadingStatus = _useState[1];\n\n  var _useState2 = useState(null),\n      podcastData = _useState2[0],\n      setPodcastData = _useState2[1];\n\n  useEffect(function () {\n    if (data && !_.isEqual(data.podcasts, podcastData)) {\n      setPodcastData(data);\n    }\n  }, [data]);\n  useEffect(function () {\n    setLoadingStatus(loading);\n  }, [loading]);\n\n  var handleCardsMapping = function handleCardsMapping() {\n    return podcastData && podcastData.podcasts.map(function (podcast) {\n      return __jsx(PodcastCard, _extends({\n        key: podcast.id\n      }, podcast));\n    });\n  };\n\n  return __jsx(Layout, null, __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'space-between',\n      alignContent: 'space-between'\n    }\n  }, handleCardsMapping()));\n}; //reason get initial props is not used in this situation, is due to the fact that it would not work with hooks. When react suspense is out, this might be updated. \n\n\nexport default Index;","map":null,"metadata":{},"sourceType":"module"}