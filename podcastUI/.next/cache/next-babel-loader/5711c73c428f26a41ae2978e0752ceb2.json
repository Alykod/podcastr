{"ast":null,"code":"var _jsxFileName = \"/Users/kod/Desktop/podcastframework/podcastUI/pages/podcasts.tsx\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport Layout from '../components/layout';\nimport React, { useEffect, useState } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { SinglePodcast } from '../services/query';\nimport _ from 'lodash';\nimport PodcastTemplate from '../components/podcastTemplate';\n\nconst PodcastPage = () => {\n  const router = useRouter();\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(SinglePodcast, {\n    variables: {\n      filter: router.query.title\n    }\n  });\n  const {\n    0: podcast,\n    1: setPodcast\n  } = useState(null);\n  useEffect(() => {\n    if (data && !_.isEqual(data.podcast, podcast)) {\n      setPodcast(data.podcasts[0]);\n    }\n  }, [data]);\n  useEffect(() => {\n    if (error) {\n      window.location.href = window.location.origin;\n    }\n  }, [error]);\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, podcast ? __jsx(PodcastTemplate, {\n    podcast: podcast,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }) : null);\n};\n\nexport default PodcastPage;","map":{"version":3,"sources":["/Users/kod/Desktop/podcastframework/podcastUI/pages/podcasts.tsx"],"names":["useRouter","Layout","React","useEffect","useState","useQuery","SinglePodcast","_","PodcastTemplate","PodcastPage","router","data","loading","error","variables","filter","query","title","podcast","setPodcast","isEqual","podcasts","window","location","href","origin"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,OAAOC,eAAP,MAA4B,+BAA5B;;AAIA,MAAMC,WAAW,GAAG,MAAM;AACtB,QAAMC,MAAM,GAAGV,SAAS,EAAxB;AACA,QAAM;AAAEW,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BR,QAAQ,CAACC,aAAD,EAAgB;AAAEQ,IAAAA,SAAS,EAAE;AAAEC,MAAAA,MAAM,EAAEL,MAAM,CAACM,KAAP,CAAaC;AAAvB;AAAb,GAAhB,CAAzC;AAEA,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBf,QAAQ,CAAiB,IAAjB,CAAtC;AAGAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIQ,IAAI,IAAI,CAACJ,CAAC,CAACa,OAAF,CAAUT,IAAI,CAACO,OAAf,EAAwBA,OAAxB,CAAb,EAA+C;AAC3CC,MAAAA,UAAU,CAACR,IAAI,CAACU,QAAL,CAAc,CAAd,CAAD,CAAV;AACH;AACJ,GAJQ,EAIN,CAACV,IAAD,CAJM,CAAT;AAOAR,EAAAA,SAAS,CAAC,MAAK;AACX,QAAGU,KAAH,EAAU;AACNS,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAwBF,MAAM,CAACC,QAAP,CAAgBE,MAAxC;AACH;AACJ,GAJQ,EAIN,CAACZ,KAAD,CAJM,CAAT;AAOA,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIK,OAAO,GAAG,MAAC,eAAD;AAAiB,IAAA,OAAO,EAAEA,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAA2C,IADtD,CADJ;AAKH,CA1BD;;AA6BA,eAAeT,WAAf","sourcesContent":["import { useRouter } from 'next/router';\nimport Layout from '../components/layout';\nimport React, { useEffect, useState } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { SinglePodcast } from '../services/query';\nimport _ from 'lodash'\nimport {Podcast} from '../services/interface'\nimport PodcastTemplate from '../components/podcastTemplate';\n\n\n\nconst PodcastPage = () => {\n    const router = useRouter();\n    const { data, loading, error } = useQuery(SinglePodcast, { variables: { filter: router.query.title } })\n\n    const [podcast, setPodcast] = useState<Podcast | null>(null);\n\n\n    useEffect(() => {\n        if (data && !_.isEqual(data.podcast, podcast)) {\n            setPodcast(data.podcasts[0])\n        }\n    }, [data]);\n\n\n    useEffect(()=> {\n        if(error) {\n            window.location.href =  window.location.origin;\n        }\n    }, [error]);\n\n\n    return (\n        <Layout>\n           {podcast ? <PodcastTemplate podcast={podcast} /> : null}\n        </Layout>\n    )\n}\n\n\nexport default PodcastPage\n\n\n\n"]},"metadata":{},"sourceType":"module"}