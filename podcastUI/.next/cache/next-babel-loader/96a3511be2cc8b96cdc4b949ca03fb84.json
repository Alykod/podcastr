{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kod/Desktop/podcastframework/podcastUI/components/audioPlayer.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Howl } from 'howler';\nimport { Box } from 'bloomer';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlayCircle } from '@fortawesome/free-solid-svg-icons';\n\nvar AudioPlayer = function AudioPlayer(_ref) {\n  var url = _ref.url,\n      id = _ref.id,\n      mime = _ref.mime;\n\n  var _useState = useState(0.5),\n      volume = _useState[0],\n      setVolume = _useState[1];\n\n  var _useState2 = useState(1),\n      playRate = _useState2[0],\n      setPlayRate = _useState2[1];\n\n  var _ref2,\n      _ref3 = _slicedToArray(_ref2, 1),\n      play = _ref3[0];\n\n  var audio = new Howl({\n    src: [cardUrlHandler(url)],\n    volume: volume,\n    rate: playRate,\n    onend: function onend() {\n      console.log(\"the end\");\n    }\n  });\n  return (// <div >\n    //     <audio controls>\n    //         <source src={url} type={mime} id={id} />\n    //     </audio>\n    // </div>\n    __jsx(Box, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, __jsx(FontAwesomeIcon, {\n      icon: faPlayCircle,\n      onClick: function onClick() {\n        audio.play();\n        console.log(audio.duration());\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }))\n  );\n};\n\nexport default AudioPlayer;\n\nvar cardUrlHandler = function cardUrlHandler(url) {\n  return \"http://localhost:1337/\".concat(url);\n};","map":{"version":3,"sources":["/Users/kod/Desktop/podcastframework/podcastUI/components/audioPlayer.tsx"],"names":["React","useState","Howl","Box","FontAwesomeIcon","faPlayCircle","AudioPlayer","url","id","mime","volume","setVolume","playRate","setPlayRate","play","audio","src","cardUrlHandler","rate","onend","console","log","duration"],"mappings":";;;AAAA,OAAOA,KAAP,IAA2CC,QAA3C,QAA2D,OAA3D;AAEA,SAASC,IAAT,QAA6B,QAA7B;AACA,SAASC,GAAT,QAAoB,SAApB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,YAAT,QAA6B,mCAA7B;;AAEA,IAAMC,WAAyC,GAAG,SAA5CA,WAA4C,OAAuB;AAAA,MAApBC,GAAoB,QAApBA,GAAoB;AAAA,MAAfC,EAAe,QAAfA,EAAe;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAAA,kBAEzCR,QAAQ,CAAC,GAAD,CAFiC;AAAA,MAE9DS,MAF8D;AAAA,MAEtDC,SAFsD;;AAAA,mBAGrCV,QAAQ,CAAC,CAAD,CAH6B;AAAA,MAG9DW,QAH8D;AAAA,MAGpDC,WAHoD;;AAAA;AAAA;AAAA,MAI9DC,IAJ8D;;AAMrE,MAAMC,KAAK,GAAG,IAAIb,IAAJ,CAAS;AACnBc,IAAAA,GAAG,EAAE,CAACC,cAAc,CAACV,GAAD,CAAf,CADc;AAEnBG,IAAAA,MAAM,EAAEA,MAFW;AAGnBQ,IAAAA,IAAI,EAAEN,QAHa;AAInBO,IAAAA,KAAK,EAAE,iBAAM;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH;AANkB,GAAT,CAAd;AASA,SACI;AACA;AACA;AACA;AACA;AACA,UAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,eAAD;AAAiB,MAAA,IAAI,EAAEhB,YAAvB;AAAqC,MAAA,OAAO,EAAE,mBAAM;AAChDU,QAAAA,KAAK,CAACD,IAAN;AACAM,QAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACO,QAAN,EAAZ;AACH,OAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AANJ;AAaH,CA5BD;;AA+BA,eAAehB,WAAf;;AAIA,IAAMW,cAAc,GAAG,SAAjBA,cAAiB,CAACV,GAAD,EAAS;AAC5B,yCAAgCA,GAAhC;AACH,CAFD","sourcesContent":["import React, { FunctionComponent, useRef, useState } from 'react';\nimport { AudioFile } from '../services/interface'\nimport { Howl, Howler } from 'howler';\nimport { Box } from 'bloomer';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlayCircle } from '@fortawesome/free-solid-svg-icons'\n\nconst AudioPlayer: FunctionComponent<AudioFile> = ({ url, id, mime }) => {\n\n    const [volume, setVolume] = useState(0.5);\n    const [playRate, setPlayRate] = useState(1);\n    const [play]\n\n    const audio = new Howl({\n        src: [cardUrlHandler(url)],\n        volume: volume,\n        rate: playRate,\n        onend: () => {\n            console.log(\"the end\")\n        },\n    })\n\n    return (\n        // <div >\n        //     <audio controls>\n        //         <source src={url} type={mime} id={id} />\n        //     </audio>\n        // </div>\n        <Box>\n            <FontAwesomeIcon icon={faPlayCircle} onClick={() => {\n                audio.play()\n                console.log(audio.duration())\n            }} />\n        </Box>\n    )\n}\n\n\nexport default AudioPlayer;\n\n\n\nconst cardUrlHandler = (url) => {\n    return `http://localhost:1337/${url}`\n}"]},"metadata":{},"sourceType":"module"}