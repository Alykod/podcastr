{"ast":null,"code":"var _jsxFileName = \"/Users/kod/Desktop/podcastframework/podcastUI/components/context/globalState.js\";\nvar __jsx = React.createElement;\nimport React, { useReducer } from \"react\";\nimport { podcastReducer, UPDATE_CURRENT_PODCAST, UPDATE_PODCASTS_LIST } from \"./reducers\";\nimport PodcastContext from \"./podcastContext\";\n\nconst GlobalState = props => {\n  const theme = \"light\";\n  const podcastList = [];\n  const currentPodcast = {};\n  const initialState = {\n    theme: 'light',\n    podcastList: [],\n    currentPodcast: {}\n  };\n  const {\n    0: podcastState,\n    1: dispatch\n  } = useReducer(podcastReducer, initialState);\n\n  const updateCurrentPodcast = podcast => {\n    dispatch({\n      type: UPDATE_CURRENT_PODCAST,\n      podcast\n    });\n  };\n\n  const updatePodcastList = podcasts => {\n    dispatch({\n      type: UPDATE_PODCASTS_LIST,\n      podcasts\n    });\n  };\n\n  return __jsx(PodcastContext.Provider, {\n    value: {\n      podcastState\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default GlobalState;","map":{"version":3,"sources":["/Users/kod/Desktop/podcastframework/podcastUI/components/context/globalState.js"],"names":["React","useReducer","podcastReducer","UPDATE_CURRENT_PODCAST","UPDATE_PODCASTS_LIST","PodcastContext","GlobalState","props","theme","podcastList","currentPodcast","initialState","podcastState","dispatch","updateCurrentPodcast","podcast","type","updatePodcastList","podcasts","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SACEC,cADF,EAEEC,sBAFF,EAGEC,oBAHF,QAIO,YAJP;AAKA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAC3B,QAAMC,KAAK,GAAG,OAAd;AACA,QAAMC,WAAW,GAAG,EAApB;AACA,QAAMC,cAAc,GAAE,EAAtB;AACA,QAAMC,YAAY,GAAG;AACjBH,IAAAA,KAAK,EAAE,OADU;AAEjBC,IAAAA,WAAW,EAAE,EAFI;AAGjBC,IAAAA,cAAc,EAAE;AAHC,GAArB;AAMA,QAAM;AAAA,OAACE,YAAD;AAAA,OAAeC;AAAf,MAA2BZ,UAAU,CAACC,cAAD,EAAiBS,YAAjB,CAA3C;;AAEA,QAAMG,oBAAoB,GAAIC,OAAD,IAAa;AACtCF,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAEb,sBAAP;AAA+BY,MAAAA;AAA/B,KAAD,CAAR;AACH,GAFD;;AAIA,QAAME,iBAAiB,GAAIC,QAAD,IAAc;AACpCL,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAEZ,oBAAP;AAA6Bc,MAAAA;AAA7B,KAAD,CAAR;AACH,GAFD;;AAIA,SAAO,MAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAACN,MAAAA;AAAD,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiDL,KAAK,CAACY,QAAvD,CAAP;AACD,CArBD;;AAwBA,eAAeb,WAAf","sourcesContent":["import React, { useReducer } from \"react\";\nimport {\n  podcastReducer,\n  UPDATE_CURRENT_PODCAST,\n  UPDATE_PODCASTS_LIST\n} from \"./reducers\";\nimport PodcastContext from \"./podcastContext\";\n\nconst GlobalState = props => {\n  const theme = \"light\";\n  const podcastList = [];\n  const currentPodcast= {};\n  const initialState = {\n      theme: 'light',\n      podcastList: [],\n      currentPodcast: {}\n  }\n\n  const [podcastState, dispatch] = useReducer(podcastReducer, initialState);\n\n  const updateCurrentPodcast = (podcast) => {\n      dispatch({type: UPDATE_CURRENT_PODCAST, podcast})\n  };\n\n  const updatePodcastList = (podcasts) => {\n      dispatch({type: UPDATE_PODCASTS_LIST, podcasts})\n  }\n\n  return <PodcastContext.Provider value={{podcastState}}>{props.children}</PodcastContext.Provider>;\n};\n\n\nexport default GlobalState;"]},"metadata":{},"sourceType":"module"}